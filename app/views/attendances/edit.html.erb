<div class="container mx-auto px-4 py-8 max-w-md">
  <div class="bg-white rounded-lg shadow-lg p-6">
    <h1 class="text-2xl font-bold text-center mb-6 text-gray-800">
      ✏️ 出欠席連絡を編集
    </h1>
    
    <%= form_with model: @attendance, url: attendance_path(@attendance), method: :patch, local: true, class: "space-y-4", html: { id: "attendance-form" } do |form| %>
      <% if @attendance.errors.any? %>
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
          <ul class="list-disc list-inside">
            <% @attendance.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>

      <div class="grid grid-cols-2 gap-3">
        <div>
          <%= form.label :child_last_name, "お子様の姓（カタカナ）", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.text_field :child_last_name, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder: "例：タナカ" %>
        </div>
        <div>
          <%= form.label :child_first_name, "お子様の名（カタカナ）", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= form.text_field :child_first_name, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder: "例：タロウ" %>
        </div>
      </div>

      <div>
        <%= form.label :date, "日付", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.date_field :date, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" %>
      </div>

      <div>
        <%= form.label :status, "出欠状況", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <div class="grid grid-cols-2 gap-2">
          <label class="flex items-center p-3 border border-gray-300 rounded-md cursor-pointer hover:bg-gray-50">
            <%= form.radio_button :status, "出席", class: "mr-2" %>
            <span class="text-green-600 font-medium">出席</span>
          </label>
          <label class="flex items-center p-3 border border-gray-300 rounded-md cursor-pointer hover:bg-gray-50">
            <%= form.radio_button :status, "欠席", class: "mr-2" %>
            <span class="text-red-600 font-medium">欠席</span>
          </label>
          <label class="flex items-center p-3 border border-gray-300 rounded-md cursor-pointer hover:bg-gray-50">
            <%= form.radio_button :status, "遅刻", class: "mr-2" %>
            <span class="text-yellow-600 font-medium">遅刻</span>
          </label>
          <label class="flex items-center p-3 border border-gray-300 rounded-md cursor-pointer hover:bg-gray-50">
            <%= form.radio_button :status, "早退", class: "mr-2" %>
            <span class="text-orange-600 font-medium">早退</span>
          </label>
        </div>
      </div>

      <div>
        <%= form.label :message, "メッセージ（任意）", class: "block text-sm font-medium text-gray-700 mb-2" %>
        <%= form.text_area :message, rows: 3, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500", placeholder: "例：熱があるため欠席します" %>
      </div>

      <div class="pt-4 space-y-3">
        <% if @attendance.errors.any? %>
          <div class="bg-yellow-50 border border-yellow-200 rounded-md p-4">
            <h4 class="text-sm font-medium text-yellow-800 mb-2">エラーが発生しました</h4>
            <p class="text-sm text-yellow-700 mb-3">エラーを修正するか、更新をキャンセルしてください。</p>
            <%= link_to "更新せずに戻る", parent_dashboard_path, 
                        class: "inline-block bg-gray-600 text-white py-2 px-4 rounded-md font-medium hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2" %>
          </div>
        <% end %>
        
        <%= form.submit "更新する", 
                        id: "update-button",
                        class: "w-full bg-blue-600 text-white py-3 px-4 rounded-md font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 #{@attendance.errors.any? ? 'opacity-50 cursor-not-allowed' : ''}",
                        disabled: @attendance.errors.any? %>
      </div>
    <% end %>

    <div class="mt-6 text-center space-y-2">
      <%= link_to "ダッシュボードに戻る", parent_dashboard_path, class: "text-blue-600 hover:text-blue-800 text-sm" %>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const updateButton = document.getElementById('update-button');
  const form = updateButton.closest('form');
  
  // フォーム送信のデバッグ
  form.addEventListener('submit', function(e) {
    console.log('Form submit event triggered');
    console.log('Form action:', form.action);
    console.log('Form method:', form.method);
    console.log('Button disabled:', updateButton.disabled);
    
    // フォームデータをログ出力
    const formData = new FormData(form);
    for (let [key, value] of formData.entries()) {
      console.log(key + ': ' + value);
    }
    
    // ボタンが無効になっている場合は有効化して送信を続行
    if (updateButton.disabled) {
      updateButton.disabled = false;
    }
    
    // 送信を妨げないようにする
    return true;
  });
  
  // 初期状態でボタンが無効になっている場合の処理
  function enableButton() {
    updateButton.disabled = false;
    updateButton.classList.remove('opacity-50', 'cursor-not-allowed');
    updateButton.classList.add('hover:bg-blue-700');
    
    // エラーメッセージを非表示にする
    const errorDiv = document.querySelector('.bg-red-100');
    if (errorDiv) {
      errorDiv.style.display = 'none';
    }
    
    // 警告メッセージを非表示にする
    const warningDiv = document.querySelector('.bg-yellow-50');
    if (warningDiv) {
      warningDiv.style.display = 'none';
    }
  }
  
  // フォームの入力フィールドを監視
  const formInputs = form.querySelectorAll('input, textarea, select');
  
  formInputs.forEach(function(input) {
    // inputイベント
    input.addEventListener('input', enableButton);
    
    // changeイベント
    input.addEventListener('change', enableButton);
    
    // keyupイベント
    input.addEventListener('keyup', enableButton);
  });
  
  // ラジオボタンの特別な処理
  const radioButtons = form.querySelectorAll('input[type="radio"]');
  radioButtons.forEach(function(radio) {
    radio.addEventListener('change', enableButton);
  });
  
  // ページ読み込み後、少し遅延してからボタンを有効化を試行
  setTimeout(function() {
    // エラーがない場合のみ有効化
    const errorDiv = document.querySelector('.bg-red-100');
    const warningDiv = document.querySelector('.bg-yellow-50');
    
    if (!errorDiv && !warningDiv && updateButton.disabled) {
      enableButton();
    }
  }, 500);
  
  // ボタンクリック時のデバッグ
  updateButton.addEventListener('click', function(e) {
    console.log('Update button clicked');
    console.log('Button disabled:', this.disabled);
  });
});
</script> 